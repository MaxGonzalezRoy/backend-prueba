<h1 class="text-center mb-5 text-primary fw-bold fs-2">ðŸ›’ Tu Carrito</h1>

{{#if cart.products.length}}
<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
  {{#each cart.products}}
    <div class="col">
      <div class="card h-100 shadow-sm">
        <div class="card-body d-flex flex-column justify-content-between">
          <div>
            <h5 class="card-title text-primary">ID Producto: {{this.product}}</h5>
            <p class="card-text">Cantidad: <strong>{{this.quantity}}</strong></p>
          </div>
          <button 
            class="btn btn-danger mt-3"
            onclick="removeFromCart('{{../cart.id}}', '{{this.product}}')"
          >
            Eliminar
          </button>
        </div>
      </div>
    </div>
  {{/each}}
</div>
{{else}}
  <div class="alert alert-info text-center mt-5" role="alert">
    El carrito estÃ¡ vacÃ­o. Â¡Agrega productos!
  </div>
{{/if}}

<script>
  async function removeFromCart(cartId, productId) {
    const confirm = await Swal.fire({
      title: 'Â¿EstÃ¡s seguro?',
      text: 'EliminarÃ¡s este producto del carrito.',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'SÃ­, eliminar',
      cancelButtonText: 'Cancelar'
    });

    if (confirm.isConfirmed) {
      const res = await fetch(`/api/carts/${cartId}/product/${productId}`, {
        method: 'DELETE'
      });

      if (res.ok) {
        Swal.fire({
          title: 'Eliminado',
          text: 'El producto fue eliminado del carrito.',
          icon: 'success',
          timer: 1500,
          showConfirmButton: false
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire('Error', 'No se pudo eliminar el producto.', 'error');
      }
    }
  }
</script>
