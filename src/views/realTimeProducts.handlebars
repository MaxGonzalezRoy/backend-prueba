<h1 class="text-center text-success fw-bold fs-2 mb-5">ðŸŸ¢ Productos en Tiempo Real</h1>

<section class="mb-5">
  <h2 class="fs-4 fw-semibold mb-3">âž• Agregar nuevo producto</h2>
  <form id="productForm" class="row g-3">
    <div class="col-md-6">
      <input class="form-control" type="text" name="title" placeholder="TÃ­tulo" required />
    </div>
    <div class="col-md-6">
      <input class="form-control" type="text" name="description" placeholder="DescripciÃ³n" required />
    </div>
    <div class="col-md-4">
      <input class="form-control" type="text" name="code" placeholder="CÃ³digo" required />
    </div>
    <div class="col-md-4">
      <input class="form-control" type="number" name="price" placeholder="Precio" required />
    </div>
    <div class="col-md-4">
      <input class="form-control" type="number" name="stock" placeholder="Stock" required />
    </div>
    <div class="col-md-6">
      <input class="form-control" type="text" name="category" placeholder="CategorÃ­a" required />
    </div>
    <div class="col-md-6">
      <input class="form-control" type="text" name="thumbnails" placeholder="Thumbnails (coma separadas)" />
    </div>
    <div class="col-12">
      <button class="btn btn-success w-100" type="submit">Agregar Producto</button>
    </div>
  </form>
</section>

<section>
  <h2 class="fs-4 fw-semibold mb-3">ðŸ“¦ Lista de productos</h2>
  <div id="productList" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
    {{#each products}}
      <div class="col">
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title text-primary fw-bold">{{title}}</h5>
            <p class="card-text">{{description}}</p>
            <p class="text-success fw-semibold">$ {{price}}</p>
            <p class="text-muted small">Stock: {{stock}}</p>
          </div>
        </div>
      </div>
    {{/each}}
  </div>
</section>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const form = document.getElementById('productForm');
  const productList = document.getElementById('productList');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = new FormData(form);
    const data = {};
    formData.forEach((value, key) => {
      if (key === 'thumbnails') {
        data[key] = value.split(',').map(str => str.trim());
      } else if (key === 'price' || key === 'stock') {
        data[key] = parseFloat(value);
      } else {
        data[key] = value;
      }
    });

    const res = await fetch('/api/products', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data)
    });

    const result = await res.json();
    if (res.ok) {
      form.reset();
      Swal.fire({
        title: 'Â¡Producto agregado!',
        text: 'Se ha agregado correctamente.',
        icon: 'success',
        timer: 1500,
        showConfirmButton: false
      });
    } else {
      Swal.fire('Error', result.message || 'No se pudo agregar el producto.', 'error');
    }
  });

  socket.on('productListUpdated', (products) => {
    productList.innerHTML = '';
    products.forEach((p) => {
      const col = document.createElement('div');
      col.className = 'col';
      col.innerHTML = `
        <div class="card h-100 shadow-sm">
          <div class="card-body">
            <h5 class="card-title text-primary fw-bold">${p.title}</h5>
            <p class="card-text">${p.description}</p>
            <p class="text-success fw-semibold">$ ${p.price}</p>
            <p class="text-muted small">Stock: ${p.stock}</p>
          </div>
        </div>
      `;
      productList.appendChild(col);
    });
  });
</script>